// Generated by CoffeeScript 1.3.3
(function() {
  var client, crypt_hash, irc, random, settings;

  irc = require("irc");

  crypt_hash = require("./modules/crypt_hash.js");

  random = require("./modules/random.js");

  settings = {
    server: "irc.servercentral.net",
    channel: "#dreamincode",
    nick: "Vapor",
    admin: "nathanpc",
    welcome: "Fuck this shit. I'm fucking awesome."
  };

  client = new irc.Client(settings.server, settings.nick, {
    channels: [settings.channel],
    userName: settings.nick,
    realName: settings.nick,
    showErrors: true,
    debug: true
  });

  client.addListener("connect", function() {
    return console.log("Connected.");
  });

  client.addListener("join", function(channel, nick, msg) {
    if (nick === settings.nick) {
      if (settings.welcome !== "") {
        return client.say(settings.channel, settings.welcome);
      }
    } else {
      return console.log("JOIN <" + channel + ">: " + nick);
    }
  });

  client.addListener("part", function(channel, nick, msg) {
    return console.log("PART <" + channel + ">: " + nick);
  });

  client.addListener("message" + settings.channel, function(nick, msg) {
    if (msg[0] === "@") {
      this.command = msg.split(" ")[0].slice(1);
      switch (this.command) {
        case "random":
          this.arg = msg.split(" ")[1];
          if (this.arg === "s") {
            return client.say(settings.channel, random.string(msg.split(" ")[2]));
          } else if (this.arg === "n") {
            return client.say(settings.channel, random.number(msg.split(" ")[2], msg.split(" ")[3]));
          } else {
            client.say(settings.channel, "You must declare a valid argument to generate random stuff. USAGE: \"random $arg $...\"");
            return client.say(settings.channel, "Valid arguments: s = String / n = Number");
          }
          break;
        case "md5":
          this.md5 = crypt_hash.md5(msg.split(" ").slice(1).join(" "));
          return client.say(settings.channel, this.md5);
      }
    } else {
      return console.log("<" + nick + "> " + msg);
    }
  });

  client.addListener("pm", function(from, msg) {
    if (from === settings.admin) {
      this.command = msg.split(" ")[0];
      console.log("<" + from + "> COMMAND: " + msg);
      switch (this.command) {
        case "say":
          return client.say(settings.channel, msg.split(" ").slice(1).join(" "));
        case "disconnect":
          return client.disconnect("Vapor Bot by nathanpc <http://github.com/nathanpc/vapor>", function() {
            return process.exit(0);
          });
      }
    } else {
      client.say(from, "Unauthorized Command.");
      return console.log("UNAUTHORIZED PM: <" + from + "> " + msg);
    }
  });

}).call(this);
